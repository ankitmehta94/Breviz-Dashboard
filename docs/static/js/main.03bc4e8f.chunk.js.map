{"version":3,"sources":["Constants/dummySummaries.js","Constants/actionConstants.js","Content/Components/SummaryList/SummaryListReducer.js","Store/rootReducer.js","Store/configureStore.js","Constants/dummyTranscript.js","Content/Components/Title/Title.jsx","Content/Components/SummaryList/SummaryList.jsx","Content/Components/RichEditor/RichEditor.jsx","Content/Components/EditSummary/EditSummary.jsx","Content/Content.jsx","Sidebar/Sidebar.jsx","App.js","reportWebVitals.js","index.js"],"names":["Summaries","summary","UPDATE_SUMMARY","initialState","SummaryListObject","SummaryListReducer","state","action","type","payload","createReducer","asyncReducers","combineReducers","storeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","f","Transcripts","Title","titleText","toggleContentVisibility","navigateTo","icon","faArrowLeft","onClick","className","SummaryList","createList","props","console","log","Object","keys","map","sumKey","sumIndex","sum","htmlArray","split","text","index","createHighlightedHTML","showEditSummary","SummaryText","summaryId","changeContent","FullSummary","dialog","toLowerCase","trim","indexOf","startIndex","endIndex","length","push","substring","SummaryHTML","this","animationIn","animationOut","isVisible","Component","connect","dispatch","RichEditor","initialContentState","ContentState","createFromText","editorState","EditorState","createWithContent","focus","refs","editor","onChange","setState","handleKeyCommand","command","_handleKeyCommand","onTab","e","_onTab","toggleBlockType","_toggleBlockType","toggleInlineStyle","style","_toggleInlineStyle","newState","RichUtils","blockType","inlineStyle","contentState","getCurrentContent","hasText","getBlockMap","first","getType","onToggle","blockStyleFn","getBlockStyle","customStyleMap","styleMap","value","ref","spellCheck","React","CODE","backgroundColor","fontFamily","fontSize","padding","block","StyleButton","preventDefault","active","onMouseDown","label","BLOCK_TYPES","BlockStyleControls","selection","getSelection","getBlockForKey","getStartKey","INLINE_STYLES","InlineStyleControls","currentStyle","getCurrentInlineStyle","has","TopLevelStyleControls","faSave","EditSummary","setContent","MainComponent","contentDictionary","Content","incomingComponent","mainContent","contentProps","mainVisible","incomingVisible","changeMainContent","contentId","setTimeout","ContentComponent","Sidebar","store","createStore","compose","configureStore","dummySummaries","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.03bc4e8f.chunk.js","sourcesContent":["const Summaries = {\n  'summary1':{\n    summary: `Emma: Yes, I did email and social that's why.\n    Anthony: We go. Brandon wanted to work on social also so he's with you on that one okay Pearson and I are going to Work on mobile emerging we're definitely going to talk about podcasts for that, because it's a starting from that. I'm doing search because I already did some analytics stuff in the past and. that's mentioned as part of that, but I also don't know that much about search, so I want to kind of learn about it.`,\n  },\n  'summary2': {\n    summary: `Emma: yeah I mean like I feel like for me an email and social I've done it before, but I also feel that. There's a lot that's different here in the US, and I would just kind of like to get that perspective.\n        Anthony: Maybe junior Brenan said he was going to start. Probably pretty much on Sunday, so if you want to just kind of have a call with him that are like slack with him or whatever.\n        Emma: yeah but.\n        Anthony: No worries, you know this there's plenty of like research on like reports about how email is done in the US.\n        `,\n  },\n}\nexport default Summaries;\n","export const UPDATE_SUMMARY = 'UPDATE_SUMMARY'","import Summaries from '../../../Constants/dummySummaries';\nimport {UPDATE_SUMMARY} from '../../../Constants/actionConstants';\n\nconst initialState = {\n    SummaryListObject: Summaries\n};\n\nconst SummaryListReducer =  (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_SUMMARY: {\n      return {\n        ...state,    \n        SummaryListObject: action.payload,\n      };\n    }\n    default:\n      return state;\n  }\n};\nexport default SummaryListReducer","import { combineReducers } from \"redux\";\nimport SummaryListReducer from '../Content/Components/SummaryList/SummaryListReducer';\n\n\nexport default function createReducer(asyncReducers) {\n    return combineReducers({\n        SummaryListReducer:SummaryListReducer\n    });\n}\n","import { createStore, compose, applyMiddleware } from 'redux';\n// import reduxThunk from 'redux-thunk';\nimport createReducer from './rootReducer';\n\n// import api from '../assets/js/utils/Api';\n\n// const middlewares = [\n//   reduxThunk.withExtraArgument({api}),\n// ];\n\nconst __BROWSER__ = typeof window!==\"undefined\";\n\nconst storeEnhancers = [\n  // applyMiddleware(...middlewares),\n  __BROWSER__  && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__() : (f) => f,\n];\n\nexport default (initialState) => {\n  const store = createStore(createReducer(), initialState, compose(...storeEnhancers) );\n  store.asyncReducers = {};\n  return store;\n}\n\nexport function injectAsyncReducer(store, name, asyncReducer) {\n  store.asyncReducers[name] = asyncReducer;\n  store.replaceReducer(createReducer(store.asyncReducers));\n}","const Transcripts  = ` | Anthony: Okay, so they like the idea like I said the having a split it up with two people.we're going to, I think, set up a meeting at 105 like right after digital marketing on Monday to recap and regroup about it.So we'll just try and have everything sort of like work through on Sunday, not everything, but like a first draft of what we think about each topic.A strategy or something like that, so, if you look at the document we split it up a little bit brandon is going to take display pretty much on his own because it's we're going to give it a little less attention.Because NAB newest not doing it, I personally hate display as a channel and.We have a few ideas for it like putting display ads on like phantom or something like that, but we're just going to kind of talk about it from a theoretical point of view.You have the ones that you want it to you have email and social pierce is going to be like a reviewer for email because he said he used to do like email pretty that was like his full time job at some point or you did a lot of that.But I think you know about it, too, because you, you know i'm sure you did that, for your for your E commerce thing right. \n| Emma: Yes, I did email and social that's why. \n| Anthony: We go.brandon wanted to work on social also so he's with you on that one okay Pearson I are going to work on mobile emerging we're definitely going to talk about podcasts for that, because it's a starting from that.i'm doing search because I already did some analytics stuff in the past and.that's mentioned as part of that, but I also don't know that much about search, so I want to kind of learn about it.yeah and I think we'll reach out to.Mike next week and see if we can have a meeting with him to let him know how we're doing and like where we are so far and asked him a couple of things, first of all, we want to see if we can have his marketing intern beyond that call as well.Okay, we can coordinate with her a little bit, and then we just want to ask him, like.You know, we didn't realize that we were kind of just supposed to write this from a theoretical point of view, like here's what we would do.But if we want to actually take a day or two and like run a campaign, what would you actually want us to do that on like which channel and how much budget.Okay, so we'll kind of get through all of that, with her or with with him and his intern if we if she can be on it Okay, but basically just coordinate with.brandon pretty much brandon.If you want to just take a first pass that email is pure said you like doesn't want to do too much on that because he's already done it before.So if you want to take a first pass at that and just.I don't know what you mentioned about what they've done already, but yeah. \n| Emma: yeah I mean like I feel like for me an email and social i've done it before, but I also feel that.there's a lot that's different here in the US, and I would just kind of like to get that perspective, but you guys take things really deep.Yes.Right, so I want to make sure that I get defined like okay Mike okay Okay, I get this like.This is not just a.Nigerian perspective, this is me like approaching this from a global perspective so that's why I kind of want to hone in on stuff that I feel like I already know just to be sure that I do know that boy, and then yes search.I don't think that I can process search and display right now I wouldn't have minded the mobile because that's also very interesting, especially like.Back home, a lot of I mean the world generally mobile fest and like more so, Nick and developing countries so it's definitely something that one should explore.yeah okay so outreach I think our work on the email maybe over the weekend and then get out of the late, and I can also post on social. \n| Anthony: Maybe junior brennan said he was going to start.Probably pretty much on Sunday, so if you want to just kind of have a call with him that are like slack with him or whatever.I don't know if he really sees the slack messages so maybe just. \n| Emma: yeah but. \n| Anthony: No worries, you know this there's plenty of like research on like reports about how email is done in the US, these days, and like just you definitely want to mention just like triggered stuff because that's. `\nexport default Transcripts","\nimport './Title.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons'\n\nfunction Title({titleText, toggleContentVisibility, navigateTo}) {\n  const icon = navigateTo?<FontAwesomeIcon icon={faArrowLeft} onClick={navigateTo} />:null\n  return (\n    <div className=\"title\">\n      <div>{icon}</div>\n      <span onClick={toggleContentVisibility} >{titleText}</span> \n      <div className={'titleEnd'}></div> \n    </div>\n  );\n}\n\nexport default Title;\n","import \"./SummaryList.css\";\nimport { Component } from \"react\";\nimport Summaries from \"../../../Constants/dummySummaries\";\nimport Transcripts from \"../../../Constants/dummyTranscript\";\nimport { bindActionCreators } from \"redux\";\nimport Title from \"../Title/Title.jsx\";\nimport { connect } from \"react-redux\";\n// import LCS from \"../../../Utilities/LCS\";\nimport { Animated } from \"react-animated-css\";\nclass SummaryList extends Component {\n  createList = () => {\n    const { SummaryListObject } = this.props;\n    console.log(SummaryListObject);\n    return Object.keys(SummaryListObject).map((sumKey, sumIndex) => {\n      const sum = SummaryListObject[sumKey];\n      let htmlArray = sum.summary.split(\"\\n\").map((text, index) => {\n        console.log(text);\n        return (\n          <p key={`p-${index}`}>\n            {this.createHighlightedHTML(text, sum.summary, sumKey)}\n          </p>\n        );\n      });\n      return (\n        <div className={\"CellLine\"} key={`sumIndex-${sumIndex}`}>\n          {htmlArray}\n        </div>\n      );\n    });\n  };\n  showEditSummary = (SummaryText, Transcripts, summaryId) => {\n    this.props.changeContent(\"editSummary\", {\n      SummaryText,\n      Transcripts,\n      summaryId,\n      titleText: \"EDIT SUMMARY\",\n    });\n  };\n  createHighlightedHTML = (SummaryText, FullSummary, summaryId) => {\n    const SummarySplit = SummaryText.split(\":\");\n    const dialog = SummarySplit[1];\n    const htmlArray = [];\n    if (dialog) {\n      const existIndex = Transcripts.toLowerCase()\n        .trim()\n        .indexOf(dialog.toLowerCase().trim());\n      if (existIndex > -1) {\n        console.log(SummaryText, \"<-----------------SummaryText\");\n        // console.log(dialog, \"<-----------------dialog\");\n        const startIndex = SummaryText.toLowerCase()\n          .trim()\n          .indexOf(dialog.toLowerCase().trim());\n        // console.log(startIndex,'<-----------------startIndex',SummaryText.substring(0, startIndex))\n        const length = dialog.toLowerCase().trim().length;\n        const endIndex = startIndex + length;\n        const showEditSummary = () =>\n          this.showEditSummary(FullSummary, Transcripts, summaryId);\n        // console.log(endIndex,'<-----------------endIndex',SummaryText.substring(startIndex, endIndex))\n        // console.log(length,'<-----------------length',SummaryText.substring(endIndex, SummaryText.length))\n        htmlArray.push(SummaryText.substring(0, startIndex).trim());\n        htmlArray.push(\n          <div className=\"clickMe\" onClick={showEditSummary}>\n            {SummaryText.substring(startIndex, endIndex).trim()}\n          </div>\n        );\n        htmlArray.push(\n          SummaryText.substring(endIndex, SummaryText.length).trim()\n        );\n      } else {\n        return <div>{SummaryText}</div>;\n      }\n      // console.log(LCS(dialog.toLowerCase().trim(), Transcripts.toLowerCase().trim()))\n    }\n    return <p>{htmlArray}</p>;\n  };\n  render() {\n    const SummaryHTML = this.createList();\n    return (\n      <Animated\n        className={\"summaryList\"}\n        animationIn=\"bounceInLeft\"\n        animationOut=\"bounceOutLeft\"\n        isVisible={this.props.isVisible}\n      >\n          <Title titleText={'SUMMARIES'}/>\n        <div className={'cellList'}>{SummaryHTML}</div>\n      </Animated>\n    );\n  }\n}\n\n// const CellLine = ({ SummaryText }) => {\n//   return\n// };\nconst mapStateToProps = (state) => {\n  const { SummaryListReducer = {} } = state;\n  console.log(state, \"<-----------------state\");\n  return {\n    SummaryListObject: SummaryListReducer,\n  };\n};\nconst mapDispatchToProps = (dispatch) => ({\n  // toggleInstallAppBanner: bindActionCreators(toggleInstallAppBanner, dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SummaryList);\n","import React from 'react';\nimport {Editor, EditorState, RichUtils, ContentState} from 'draft-js';\nimport './RichEditor.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSave } from '@fortawesome/free-solid-svg-icons'\nclass RichEditor extends React.Component {\n  constructor(props) {\n    super(props);\n     const initialContentState = ContentState.createFromText(props.SummaryText);\n    this.state = {editorState: EditorState.createWithContent(initialContentState)};\n    // this.state = {editorState: EditorState.createEmpty()};\n\n    this.focus = () => this.refs.editor.focus();\n   \n    this.onChange = (editorState) => this.setState({initialContentState});\n\n    this.handleKeyCommand = (command) => this._handleKeyCommand(command);\n    this.onTab = (e) => this._onTab(e);\n    this.toggleBlockType = (type) => this._toggleBlockType(type);\n    this.toggleInlineStyle = (style) => this._toggleInlineStyle(style);\n  }\n\n  _handleKeyCommand(command) {\n    const {editorState} = this.state;\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n    if (newState) {\n      this.onChange(newState);\n      return true;\n    }\n    return false;\n  }\n\n  _onTab(e) {\n    const maxDepth = 4;\n    this.onChange(RichUtils.onTab(e, this.state.editorState, maxDepth));\n  }\n\n  _toggleBlockType(blockType) {\n    this.onChange(\n      RichUtils.toggleBlockType(\n        this.state.editorState,\n        blockType\n      )\n    );\n  }\n\n  _toggleInlineStyle(inlineStyle) {\n    this.onChange(\n      RichUtils.toggleInlineStyle(\n        this.state.editorState,\n        inlineStyle\n      )\n    );\n  }\n\n  render() {\n    const {editorState} = this.state;\n\n    // If the user changes block type before entering any text, we can\n    // either style the placeholder or hide it. Let's just hide it now.\n    let className = 'RichEditor-editor';\n    var contentState = editorState.getCurrentContent();\n    if (!contentState.hasText()) {\n      if (contentState.getBlockMap().first().getType() !== 'unstyled') {\n        className += ' RichEditor-hidePlaceholder';\n      }\n    }\n\n    return (\n      <div className={'editorBase'}>\n      <div className=\"RichEditor-root\">\n        \n        <TopLevelStyleControls\n          editorState={editorState}\n          onToggle={this.toggleBlockType}\n        />\n        <BlockStyleControls\n          editorState={editorState}\n          onToggle={this.toggleBlockType}\n        />\n        <InlineStyleControls\n          editorState={editorState}\n          onToggle={this.toggleInlineStyle}\n        />\n        <div className={className} onClick={this.focus}>\n          <Editor\n            blockStyleFn={getBlockStyle}\n            customStyleMap={styleMap}\n            editorState={editorState}\n            handleKeyCommand={this.handleKeyCommand}\n            onChange={this.onChange}\n            onTab={this.onTab}\n            // placeholder=\"\"\n            value={this.props.SummaryText}\n            ref=\"editor\"\n            spellCheck={true}\n          />\n        </div>\n      </div>\n      </div>\n    );\n  }\n}\n\n// Custom overrides for \"code\" style.\nconst styleMap = {\n  CODE: {\n    backgroundColor: 'rgba(0, 0, 0, 0.05)',\n    fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\n    fontSize: 16,\n    padding: 2,\n  },\n};\n\nfunction getBlockStyle(block) {\n  switch (block.getType()) {\n    case 'blockquote': return 'RichEditor-blockquote';\n    default: return null;\n  }\n}\n\nclass StyleButton extends React.Component {\n  constructor() {\n    super();\n    this.onToggle = (e) => {\n      e.preventDefault();\n      this.props.onToggle(this.props.style);\n    };\n  }\n\n  render() {\n    let className = 'RichEditor-styleButton';\n    if (this.props.active) {\n      className += ' RichEditor-activeButton';\n    }\n\n    return (\n      <span className={className} onMouseDown={this.onToggle}>\n        {this.props.label}\n      </span>\n    );\n  }\n}\n\nconst BLOCK_TYPES = [\n  {label: 'H1', style: 'header-one'},\n  {label: 'H2', style: 'header-two'},\n  {label: 'H3', style: 'header-three'},\n  {label: 'H4', style: 'header-four'},\n  {label: 'H5', style: 'header-five'},\n  {label: 'H6', style: 'header-six'},\n  {label: 'Blockquote', style: 'blockquote'},\n  {label: 'UL', style: 'unordered-list-item'},\n  {label: 'OL', style: 'ordered-list-item'},\n  {label: 'Code Block', style: 'code-block'},\n];\n\nconst BlockStyleControls = (props) => {\n  const {editorState} = props;\n  const selection = editorState.getSelection();\n  const blockType = editorState\n    .getCurrentContent()\n    .getBlockForKey(selection.getStartKey())\n    .getType();\n\n  return (\n    <div className=\"RichEditor-controls\">\n      {BLOCK_TYPES.map((type) =>\n        <StyleButton\n          key={type.label}\n          active={type.style === blockType}\n          label={type.label}\n          onToggle={props.onToggle}\n          style={type.style}\n        />\n      )}\n    </div>\n  );\n};\n\nvar INLINE_STYLES = [\n  {label: 'Bold', style: 'BOLD'},\n  {label: 'Italic', style: 'ITALIC'},\n  {label: 'Underline', style: 'UNDERLINE'},\n  {label: 'Monospace', style: 'CODE'},\n];\n\nconst InlineStyleControls = (props) => {\n  var currentStyle = props.editorState.getCurrentInlineStyle();\n  return (\n    <div className=\"RichEditor-controls\">\n      {INLINE_STYLES.map(type =>\n        <StyleButton\n          key={type.label}\n          active={currentStyle.has(type.style)}\n          label={type.label}\n          onToggle={props.onToggle}\n          style={type.style}\n        />\n      )}\n    </div>\n  );\n};\nconst TopLevelStyleControls = (props) => {\n  var currentStyle = props.editorState.getCurrentInlineStyle();\n  return (\n    <div className=\"RichEditor-controls\">\n     <FontAwesomeIcon icon={faSave}  />\n    </div>\n  );\n};\nexport default RichEditor;","import {Component} from 'react';\nimport RichEditor from '../RichEditor/RichEditor'\nimport './EditSummary.css';\nimport Title from '../Title/Title.jsx'\n\n\nimport { Animated } from 'react-animated-css'\nclass EditSummary extends Component{\n    render(){\n      console.log(\"here\")\n      return (<Animated className={'editSummary'} animationIn=\"bounceInLeft\" animationOut=\"bounceOutLeft\" isVisible={this.props.isVisible}>\n            <Title titleText={'EDIT SUMMARY'} navigateTo={this.navigateTo}/>\n          <div className={'transcripDiv'} >{this.props.Transcripts}</div>\n          <RichEditor SummaryText={this.props.SummaryText} summaryId={this.props.summaryId} />\n      </Animated>);\n    }\n  }\nexport default EditSummary","\nimport './Content.css';\nimport {Component} from 'react';\n\nimport SummaryList from './Components/SummaryList/SummaryList.jsx';\nimport EditSummary from './Components/EditSummary/EditSummary.jsx';\n\nconst setContent = (MainComponent, props) => {\n  class Main extends Component{\n    render(){\n      console.log(\"here\")\n      return (<MainComponent {...props} />);\n    }\n  }\n  return Main\n};\n\nconst contentDictionary = {\n  'summaryList':  SummaryList,\n  'editSummary': EditSummary\n}\nclass Content extends Component{\n  state = {\n    incomingComponent:() => null,\n    mainContent: SummaryList,\n    titleText:'SUMMARIES',\n    contentProps: {},\n    mainVisible:true,\n    incomingVisible: false,\n  }\n  changeMainContent = (contentId, contentProps)=>{\n    console.log(contentId,contentProps)\n    const mainContent = setContent(contentDictionary[contentId],contentProps);\n    // const incomingComponent = setContent(incomingComponent,{})\n    console.log(mainContent,'<-----------------mainContent')\n    this.setState({\n      titleText: contentProps.titleText,\n      mainVisible:false,\n      incomingVisible: false,\n    })\n    setTimeout((() => {\n      this.setState({\n        mainContent: mainContent,\n        // incomingComponent: incomingComponent,\n        mainVisible:true,\n        incomingVisible: false,\n      })\n    }),1000)\n  }\n  navigateTo = () => {\n\n  }\n  render(){\n    const ContentComponent = this.state.mainContent;\n    // const IncomingComponent = this.state.incomingComponent;\n    // console.log(IncomingComponent)\n    return (\n      <div className=\"content\">\n        \n          {/* <IncomingComponent isVisible={this.state.incomingVisible} /> */}\n     <ContentComponent changeContent={this.changeMainContent} isVisible={this.state.mainVisible} />\n      </div>\n    );\n  }\n}\n\nexport default Content;\n","\nimport './Sidebar.css';\n\nfunction Sidebar() {\n  return (\n    <div className=\"sidebar\">\n    \n    </div>\n  );\n}\n\nexport default Sidebar;\n","\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport configureStore from './Store/configureStore';\nimport { combineReducers } from \"redux\";\nimport Content from './Content/Content.jsx'\nimport Sidebar from './Sidebar/Sidebar.jsx'\nimport dummySummaries from './Constants/dummySummaries';\nconst store = configureStore({SummaryListReducer:dummySummaries});\nfunction App() {\n  return (\n    <Provider store={store}>\n    <div className=\"App\">\n      <div className=\"header\">\n      </div>\n      <div className=\"main\">\n        <Sidebar />\n        <Content />\n      </div>\n    </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}